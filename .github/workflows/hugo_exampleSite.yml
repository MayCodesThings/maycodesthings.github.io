# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo exampleSite to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.127.0 # Changed to a known stable version, 0.147.5 seems like a future date
    steps:
      - name: Checkout
        uses: actions/checkout@v4 # Use a more common recent version like v4
        with:
          submodules: recursive
          fetch-depth: 0 # Needed for Hugo's .Lastmod

      - name: Setup Hugo Extended
        uses: peaceiris/actions-hugo@v2 # Or v3 if you prefer
        with:
          hugo-version: ${{ env.HUGO_VERSION }} # Use the env var
          extended: true

      - name: Install Dart Sass CLI (fixed version)
        run: |
          curl -L https://github.com/sass/dart-sass/releases/download/1.73.1/dart-sass-linux-x64.tar.gz -o dart-sass.tar.gz
          tar -xzf dart-sass.tar.gz
          sudo mv dart-sass/sass /usr/local/bin/sass
          sudo chmod 755 /usr/local/bin/sass
          sass --version

      - name: Check for Sass executable
        run: |
          echo "Current PATH is: $PATH"
          echo "Checking for sass..."
          which sass || echo "sass command not found with 'which' during debug"
          echo "Attempting sass --version..."
          sass --version || echo "sass --version failed during debug"

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Node.js dependencies (if a lockfile exists)
        # Only runs if a package-lock.json or npm-shrinkwrap.json is found at the root
        # Adjust path if your package.json is elsewhere e.g., in ./exampleSite/
        if: hashFiles('package-lock.json', 'npm-shrinkwrap.json') != ''
        run: npm ci

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --themesDir ./themes \
            --source . \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      # Note: Your pagefind step might need adjustment if your public output is not at ./exampleSite/public
      # Hugo typically outputs to ./public by default from the root.
      # If your --source . is used, then public will be at ./public
      - name: Index pagefind
        run: npx pagefind --site "./public" # Adjusted path assuming default Hugo output

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4